@model Haver.Models.NCR
@using Microsoft.EntityFrameworkCore;
@using Microsoft.AspNetCore.Identity
@using Haver.Data;
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager
@inject HaverContext _context
@*For Cookies*@
@inject Microsoft.AspNetCore.Http.IHttpContextAccessor HttpContextAccessor

@{
    ViewData["Title"] = "Edit NCR";
}

@{
    //Get user logged in
    var user = await UserManager.GetUserAsync(User);
    //Get user role
    List<string> userRole = (await UserManager.GetRolesAsync(user)).ToList();

    //Scroll to section
    var sectionEdited = TempData["SectionEdited"] as string;

    //Sections
    bool isQualRepNull = Model.QualityRepresentative != null ? false : true;
    bool isEngineeringNull = Model.Engineering != null ? false : true; 
    bool isOperationsNull = Model.Operations != null ? false : true; 
    bool isProcurementNull = Model.Procurement != null ? false : true; 
    bool isReinspectionNull = Model.Reinspection != null ? false : true;
}

<div class="page-sub-title">
    <a asp-action="Index"><i class="bi bi-arrow-left"></i></a>
    <h1>Edit NCR</h1>
</div>

<div class="alert alert-primary d-flex align-items-center standard-border-bottom alert-container" role="alert">
    <i class="bi bi-info-circle-fill" style="color: var(--blue);"></i>
    <div>
        <p class="standard-border-bottom">You can only edit one section at a time</p>
    </div>
    <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
</div>

<div class="accordion" id="accordionPanelsStayOpenExample">
    <div class="accordion-item">
        <h2 class="accordion-header" id="panelsStayOpen-headingOne">
            <button class="accordion-button collapsed" id="Quality-Section" type="button" data-bs-toggle="collapse" data-bs-target="#QualityForm" aria-expanded="true" aria-controls="QualityForm">
                <i class="bi bi-pencil-square"></i>Quality Representative
            </button>
        </h2>
        <div id="QualityForm" class="accordion-collapse collapse" aria-labelledby="QualityRep-Section">
            <div class="accordion-body">

                <form asp-action="Edit" enctype="multipart/form-data">
                    <div asp-validation-summary="ModelOnly" class="text-danger"></div>

                    @Html.AntiForgeryToken()

                    @Html.HiddenFor(model => model.Phase)

                    <input type="hidden" asp-for="RowVersion"/>
                    <input type="hidden" asp-for="ID"/>

                    <div class="section-form">
                        <div class="row">
                            <div class="col-md-4">
                                <div class="form-group">
                                    <label asp-for="QualityRepresentative.ProcessApplicableID" class="control-label"></label><span> *</span>
                                    <select asp-for="QualityRepresentative.ProcessApplicableID" class="form-select" asp-items="ViewBag.ProcessApplicableID">
                                        <option value="">Select a Process Applicable</option>
                                    </select>
                                    <span asp-validation-for="QualityRepresentative.ProcessApplicableID" class="text-danger"></span>
                                </div>
                                <div class="form-group">
                                    <label asp-for="QualityRepresentative.PartID" class="control-label"></label><span> *</span>
                                    <div class="input-search-box">
                                        <input asp-for="QualityRepresentative.Part.PartSummary" list="partOptions" class="form-control" autocomplete="off" type="text" placeholder="Search for a part" name="partSel" >
                                    </div>
                                    <datalist id="partOptions">
                                        <option value="">Search for a part</option>
                                        @foreach (var item in ViewBag.PartSummary)
                                        {
                                            <option value="@item.Value">@item.Text</option>
                                        }
                                    </datalist>
                                    <span asp-validation-for="QualityRepresentative.PartID" class="text-danger"></span>
                                </div>
                                <div class="form-group">
                                    <label asp-for="QualityRepresentative.ProblemID" class="control-label"></label><span> *</span>
                                    <div class="input-search-box">
                                        <input asp-for="QualityRepresentative.Problem.ProblemDescription" list="problemOptions" class="form-control" autocomplete="off" type="text" placeholder="Search for a problem" name="problemSel">
                                    </div>
                                    <datalist id="problemOptions">
                                        <option value="">Search for problem</option>
                                        @foreach (var item in ViewBag.ProblemDescription)
                                        {
                                            <option value="@item.Value">@item.Text</option>
                                        }
                                    </datalist>
                                    <span asp-validation-for="QualityRepresentative.ProblemID" class="text-danger"></span>
                                </div>
                                <div class="form-group form-check">
                                    <label class="form-check-label">
                                        <input class="form-check-input" asp-for="QualityRepresentative.NonConforming" disabled /> @Html.DisplayNameFor(model => model.QualityRepresentative.NonConforming)
                                    </label>
                                </div>
                                <div class="form-group form-check">
                                    <label class="form-check-label">
                                        <input class="form-check-input" asp-for="QualityRepresentative.ConfirmingEng" disabled /> @Html.DisplayNameFor(model => model.QualityRepresentative.ConfirmingEng)
                                    </label>
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="form-group">
                                    <label asp-for="QualityRepresentative.SupplierID" class="control-label"></label><span> *</span>
                                    <div class="input-search-box">
                                        <input asp-for="QualityRepresentative.Supplier.SupplierSummary" list="supplierOptions" class="form-control" autocomplete="off" type="text" placeholder="Search for a problem" name="supSel" >
                                    </div>
                                    <datalist id="supplierOptions">
                                        <option value="">Search for problem</option>
                                        @foreach (var item in ViewBag.SupplierSummary)
                                        {
                                            <option value="@item.Value">@item.Text</option>
                                        }
                                    </datalist>
                                    <span asp-validation-for="QualityRepresentative.SupplierID" class="text-danger"></span>
                                </div>
                                <div class="form-group">
                                    <label asp-for="QualityRepresentative.QuantReceived" class="control-label"></label><span> *</span>
                                    <input asp-for="QualityRepresentative.QuantReceived" class="form-control" oninput="this.value = Math.abs(this.value)" />
                                    <span asp-validation-for="QualityRepresentative.QuantReceived" class="text-danger"></span>
                                </div>
                                <div class="form-group">
                                    <label asp-for="QualityRepresentative.QuantDefective" class="control-label"></label><span> *</span>
                                    <input asp-for="QualityRepresentative.QuantDefective" class="form-control" oninput="this.value = Math.abs(this.value)" />
                                    <span asp-validation-for="QualityRepresentative.QuantDefective" class="text-danger"></span>
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="form-group">
                                    <label asp-for="NCRNum" class="control-label"></label><span> *</span>
                                    <input asp-for="NCRNum" class="form-control" readonly />
                                    <span asp-validation-for="NCRNum" class="text-danger"></span>
                                </div>
                                <div class="form-group">
                                    <label asp-for="QualityRepresentative.PoNo" class="control-label"></label><span> *</span>
                                    <input asp-for="QualityRepresentative.PoNo" class="form-control" oninput="this.value = Math.abs(this.value)" />
                                    <span asp-validation-for="QualityRepresentative.PoNo" class="text-danger"></span>
                                </div>
                                <div class="form-group">
                                    <label asp-for="QualityRepresentative.SalesOrd" class="control-label"></label><span> *</span>
                                    <input asp-for="QualityRepresentative.SalesOrd" id="myinputT" class="form-control" />
                                    <span asp-validation-for="QualityRepresentative.SalesOrd" class="text-danger"></span>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label asp-for="QualityRepresentative.QualityRepresentativeSign" class="control-label"></label><span> *</span>
                                    <input asp-for="QualityRepresentative.QualityRepresentativeSign" class="form-control" />
                                    <span asp-validation-for="QualityRepresentative.QualityRepresentativeSign" class="text-danger"></span>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label asp-for="QualityRepresentative.QualityRepDate" class="control-label"></label><span> *</span>
                                    <input asp-for="QualityRepresentative.QualityRepDate" class="form-control" readonly />
                                    <span asp-validation-for="QualityRepresentative.QualityRepDate" class="text-danger"></span>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row section-form">
                        <div class="section-label">
                            <h4>Report Notes</h4>
                            <hr />
                        </div>
                        <div class="col-md-12">
                            <div class="form-group">
                                <label asp-for="QualityRepresentative.DescDefect" class="control-label"></label><span> *</span>
                                <textarea asp-for="QualityRepresentative.DescDefect" rows="5" class="form-control"></textarea>
                                <span asp-validation-for="QualityRepresentative.DescDefect" class="text-danger"></span>
                            </div>
                        </div>
                    </div>

                    @if (Model.QualityRepresentative != null && (User.IsInRole("Admin") || User.IsInRole("Quality Inspector")))
                    {
                        <div class="row section-form">
                            <div class="section-label">
                                <h4>Multimedia</h4>
                                <hr />
                            </div>
                            <div class="col-md-12 uploader">
                                <label class="control-label">Images, screenshots, drawings</label>
                                <div class="form-group images-upload-container">
                                    <div class="upload-button-container">
                                        <label for="formFile" class="form-label">Drop files here or click on the button below</label>
                                        <button class="btn btn-primary">Upload</button>
                                        <input class="form-control" type="file" id="uploadFilebtn" name="Pictures" multiple onchange="handleFileSelection(this, 'qualityrep-container')">
                                    </div>
                                    <input id="uploadFileArea" class="form-control" type="file" name="Pictures" multiple onchange="handleFileSelection(this, 'qualityrep-container')" />
                                </div>
                                <div class="form-group" id="qualityrep-container"></div>
                            </div>

                            @if (Model.QualityRepresentative.QualityPhotos?.Any() ?? false)
                            {
                                <div class="section-form multimedia">
                                    <div class="form-group details-images editor">
                                        @for (int i = 0; i < Model.QualityRepresentative.QualityPhotos.Count; i++)
                                        {
                                            var image = Model.QualityRepresentative.QualityPhotos[i];
                                            string imageBase64 = Convert.ToBase64String(image.Content);
                                            string imageSrc = string.Format("data:" + image.MimeType + ";base64,{0}", imageBase64);
                                            <div class="card editor" style="width: 14rem;">
                                                <!-- Button trigger modal -->
                                                <button type="button" class="btn btn-primary expand-img" data-bs-toggle="modal" data-bs-target="#imgQualRepModal-@i">
                                                    <i class="bi bi-arrows-angle-expand"></i>
                                                </button>
                                                <img src="@imageSrc" alt="Customer Image" title="Customer Image" class="card-img-top" />
                                                <div class="card-body">
                                                    <p>Remove Image</p>
                                                    <input class="form-check-input" type="checkbox" id="imagesToRemove" name="imagesToRemove" value="@image.ID">
                                                </div>
                                            </div>
                                            <!-- Modal -->
                                            <div class="modal fade" id="imgQualRepModal-@i" tabindex="-1" aria-labelledby="imgQualRepModalLabel" aria-hidden="true">
                                                <div class="modal-dialog modal-dialog-centered">
                                                    <div class="modal-content">
                                                        <div class="modal-header">
                                                            <h1 class="modal-title fs-5" id="imgQualRepModalLabel">Image</h1>
                                                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                                                        </div>
                                                        <div class="modal-body">
                                                            <img src="@imageSrc" alt="Customer Image" title="Customer Image" class="img-fluid rounded" />
                                                        </div>
                                                        <div class="modal-footer">
                                                            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        }
                                    </div>
                                </div>
                            }

                            <div class="col-md-12">
                                <div class="form-group link-adder">
                                    <label for="Links" class="form-label">Links</label>
                                    <div>
                                        <input class="form-control" name="Links" type="text" id="LinksQuality" />
                                        <button type="button" id="addLinkButton" class="btn btn-sm btn-primary" onclick="addLink('linksListContainerQuality', 'LinksQuality')"><i class="bi bi-plus-lg"></i></button>
                                    </div>
                                </div>

                                <div class="form-group" id="linksListContainerQuality"></div>
                            </div>

                            @if (Model.QualityRepresentative.VideoLinks != null && Model.QualityRepresentative.VideoLinks.Any())
                            {
                                <div class="section-form multimedia">
                                        <div class="form-group details-links editor">
                                            <ul>
                                                @foreach (var link in Model.QualityRepresentative.VideoLinks)
                                                {
                                                    <li>
                                                        <a href="@link.Link" target="_blank">@link.Link</a>
                                                        <div>
                                                            <p >Check to remove</p>
                                                            <input class="form-check-input" type="checkbox" id="linksToRemove" name="linksToRemove" value="@link.ID">
                                                        </div>
                                                    </li>
                                                }
                                            </ul>
                                        </div>
                                </div>
                            }
                        </div>

                        <div class="form-group">
                            <input type="submit" value="Save Changes" class="btn btn-primary" />
                            <input type="number" value="@Model.QualityRepresentative.ID" name="IDEdited" hidden />
                            <input type="text" value="QualityRepresentative" id="sectionEdited" name="sectionEdited" hidden />
                        </div>
                    }
                </form>
            </div>
        </div>
    </div>
    <div class="accordion-item">
        <h2 class="accordion-header" id="panelsStayOpen-headingTwo">
            <button class="accordion-button collapsed" id="Engineering-Section" type="button" data-bs-toggle="collapse" data-bs-target="#EngineerForm" aria-expanded="false" aria-controls="EngineerForm">
                <i class="bi bi-gear"></i>Engineering
            </button>
        </h2>
        <div id="EngineerForm" class="accordion-collapse collapse" aria-labelledby="Engineering-Section">
            <div class="accordion-body">

                <form asp-action="Edit" method="post" enctype="multipart/form-data">
                    <div asp-validation-summary="ModelOnly" class="text-danger"></div>

                    @Html.AntiForgeryToken()

                    <input type="hidden" asp-for="RowVersion" />
                    <input type="hidden" asp-for="ID" />

                    <div class="section-form">
                        <div class="row">
                            <div class="col-md-4">
                                <div class="form-group">
                                    <label asp-for="Engineering.EngReviewID" class="control-label"></label><span> *</span>
                                    <select asp-for="Engineering.EngReviewID" class="form-select" asp-items="ViewBag.EngReviewID">
                                        <option value="">Select an option</option>
                                    </select>
                                    <span asp-validation-for="Engineering.EngReviewID" class="text-danger"></span>
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="form-group">
                                    <label asp-for="Engineering.IsCustNotificationNecessary" class="custom-control-label"></label><br />
                                    <input class="form-check-input" asp-for="Engineering.IsCustNotificationNecessary" id="custNotificationCheckbox" />
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="form-group">
                                    <label asp-for="Engineering.DrawReqUpdating" class="custom-control-label"></label><br />
                                    <input class="form-check-input" asp-for="Engineering.DrawReqUpdating" id="drawReqUpdatingCheckbox" />
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label asp-for="Engineering.EngineerSign" class="control-label"></label><span> *</span>
                                    <input asp-for="Engineering.EngineerSign" class="form-control" />
                                    <span asp-validation-for="Engineering.EngineerSign" class="text-danger"></span>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label asp-for="Engineering.EngineeringDate" class="control-label"></label><span> *</span>
                                    <input asp-for="Engineering.EngineeringDate" id="engineeringDate" class="form-control" readonly />
                                    <span asp-validation-for="Engineering.EngineeringDate" class="text-danger"></span>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="row section-form">
                        <div class="section-label">
                            <h4>Drawings</h4>
                            <hr />
                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                <label asp-for="Engineering.OrgRevisionNum" class="control-label"></label>
                                <input asp-for="Engineering.OrgRevisionNum" class="form-control drawing-field" oninput="this.value = Math.abs(this.value)" />
                                <span asp-validation-for="Engineering.OrgRevisionNum" class="text-danger"></span>
                            </div>
                            <div class="form-group">
                                <label asp-for="Engineering.UpdatedRevisionNum" class="control-label"></label>
                                <input asp-for="Engineering.UpdatedRevisionNum" class="form-control drawing-field" oninput="this.value = Math.abs(this.value)" />
                                <span asp-validation-for="Engineering.UpdatedRevisionNum" class="text-danger"></span>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                <label asp-for="Engineering.RevisionedBy" class="control-label"></label>
                                <input asp-for="Engineering.RevisionedBy" class="form-control drawing-field" />
                                <span asp-validation-for="Engineering.RevisionedBy" class="text-danger"></span>
                            </div>
                            <div class="form-group">
                                <label asp-for="Engineering.RevisionDate" class="control-label"></label>
                                <input asp-for="Engineering.RevisionDate" class="form-control drawing-field" />
                                <span asp-validation-for="Engineering.RevisionDate" class="text-danger"></span>
                            </div>
                        </div>
                    </div>

                    <div class="row section-form">
                        <div class="section-label">
                            <h4>Report Notes</h4>
                            <hr />
                        </div>
                        <div class="col-md-12">
                            <div class="form-group">
                                <label asp-for="Engineering.Disposition" class="control-label"></label><span> *</span>
                                <textarea asp-for="Engineering.Disposition" rows="5" class="form-control"></textarea>
                                <span asp-validation-for="Engineering.Disposition" class="text-danger"></span>
                            </div>
                            <div class="form-group">
                                <label asp-for="Engineering.CustIssueMsg" class="control-label"></label>
                                <textarea asp-for="Engineering.CustIssueMsg" rows="5" class="form-control" id="custIssueMsgField"></textarea>
                                <span asp-validation-for="Engineering.CustIssueMsg" class="text-danger"></span>
                            </div>
                        </div>
                    </div>

                    @if (Model.Engineering != null && (User.IsInRole("Admin") || User.IsInRole("Engineer")))
                    {
                        <div class="row section-form">
                            <div class="section-label">
                                <h4>Multimedia</h4>
                                <hr />
                            </div>
                            <div class="col-md-12 uploader">
                                <label class="control-label">Images, screenshots, drawings</label>
                                <div class="form-group images-upload-container">
                                    <div class="upload-button-container">
                                        <label for="formFile" class="form-label">Drop files here or click on the button below</label>
                                        <button class="btn btn-primary">Upload</button>
                                        <input class="form-control" type="file" id="uploadFilebtn" name="Pictures" multiple onchange="handleFileSelection(this, 'engineering-container')">
                                    </div>
                                    <input id="uploadFileArea" class="form-control" type="file" name="Pictures" multiple onchange="handleFileSelection(this, 'engineering-container')" />
                                </div>
                                <div class="form-group" id="engineering-container"></div>
                            </div>

                            @if (Model.Engineering.QualityPhotos?.Any() ?? false)
                            {
                                <div class="section-form multimedia">
                                    <div class="form-group details-images editor">
                                        @for (int i = 0; i < Model.Engineering.QualityPhotos.Count; i++)
                                        {
                                            var image = Model.Engineering.QualityPhotos[i];
                                            string imageBase64 = Convert.ToBase64String(image.Content);
                                            string imageSrc = string.Format("data:" + image.MimeType + ";base64,{0}", imageBase64);
                                            <div class="card editor" style="width: 14rem;">
                                                <!-- Button trigger modal -->
                                                <button type="button" class="btn btn-primary expand-img" data-bs-toggle="modal" data-bs-target="#imgEngModal-@i">
                                                    <i class="bi bi-arrows-angle-expand"></i>
                                                </button>
                                                <img src="@imageSrc" alt="Customer Image" title="Customer Image" class="card-img-top" />
                                                <div class="card-body">
                                                    <p>Remove Image</p>
                                                    <input class="form-check-input" type="checkbox" id="imagesToRemove" name="imagesToRemove" value="@image.ID">
                                                </div>
                                            </div>
                                            <!-- Modal -->
                                            <div class="modal fade" id="imgEngModal-@i" tabindex="-1" aria-labelledby="imgEngModalLabel" aria-hidden="true">
                                                <div class="modal-dialog modal-dialog-centered">
                                                    <div class="modal-content">
                                                        <div class="modal-header">
                                                            <h1 class="modal-title fs-5" id="imgEngModalLabel">Image</h1>
                                                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                                                        </div>
                                                        <div class="modal-body">
                                                            <img src="@imageSrc" alt="Customer Image" title="Customer Image" class="img-fluid rounded" />
                                                        </div>
                                                        <div class="modal-footer">
                                                            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        }
                                    </div>
                                </div>
                            }

                            <div class="col-md-12">
                                <div class="form-group link-adder">
                                    <label for="Links" class="form-label">Links</label>
                                    <div>
                                        <input class="form-control" name="Links" type="text" id="LinksEngineering" />
                                        <button type="button" id="addLinkButton" class="btn btn-sm btn-primary" onclick="addLink('linksListContainerEngineering', 'LinksEngineering')"><i class="bi bi-plus-lg"></i></button>
                                    </div>
                                </div>

                                <div class="form-group" id="linksListContainerEngineering"></div>
                            </div>

                            @if (Model.Engineering.VideoLinks != null && Model.Engineering.VideoLinks.Any())
                            {
                                <div class="section-form multimedia">
                                        <div class="form-group details-links editor">
                                            <ul>
                                                @foreach (var link in Model.Engineering.VideoLinks)
                                                {
                                                    <li>
                                                        <a href="@link.Link" target="_blank">@link.Link</a>
                                                        <div>
                                                            <p>Check to remove</p>
                                                            <input class="form-check-input" type="checkbox" id="linksToRemove" name="linksToRemove" value="@link.ID">
                                                        </div>
                                                    </li>
                                                }
                                            </ul>
                                        </div>
                                </div>
                            }
                        </div>

                        <div class="form-group">
                            <input type="submit" value="Save Changes" class="btn btn-primary" />
                            <input type="text" value="Engineering" id="sectionEdited" name="sectionEdited" hidden />
                        </div>
                    }
                </form>
            </div>
        </div>
    </div>
    <div class="accordion-item">
        <h2 class="accordion-header" id="panelsStayOpen-headingThree">
            <button class="accordion-button collapsed" id="Operations-Section" type="button" data-bs-toggle="collapse" data-bs-target="#OperationsForm" aria-expanded="false" aria-controls="OperationsForm">
                <i class="bi bi-receipt"></i>Operations
            </button>
        </h2>
        <div id="OperationsForm" class="accordion-collapse collapse" aria-labelledby="Operations-Section">
            <div class="accordion-body">

                <form asp-action="Edit" method="post" enctype="multipart/form-data">
                    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                    @Html.AntiForgeryToken()

                    <input type="hidden" asp-for="RowVersion" />
                    <input type="hidden" asp-for="ID" />

                    <div class="section-form">
                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label asp-for="Operations.PrelDecisionID" class="control-label"></label><span> *</span>
                                    <select asp-for="Operations.PrelDecisionID" class="form-select" asp-items="ViewBag.PrelDecisionID">
                                        <option value="">Select a PrelDecision</option>
                                    </select>
                                    <span asp-validation-for="Operations.PrelDecisionID" class="text-danger"></span>
                                </div>
                            </div>
                            <div class="col-md-3">
                                <div class="form-group">
                                    <label asp-for="Operations.CarRaised" class="custom-control-label"></label><br />
                                    <input class="form-check-input" asp-for="Operations.CarRaised" id="carRaisedCheckbox" />
                                </div>
                            </div>
                            <div class="col-md-3">
                                <div class="form-group">
                                    <label asp-for="Operations.IsFollowUpReq" class="custom-control-label"></label><br />
                                    <input class="form-check-input" asp-for="Operations.IsFollowUpReq" id="followUpReqCheckbox" />
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label asp-for="Operations.CarNum" class="control-label"></label>
                                    <input asp-for="Operations.CarNum" class="form-control" id="carNumField" oninput="this.value = Math.abs(this.value)" />
                                    <span asp-validation-for="Operations.CarNum" class="text-danger"></span>
                                </div>
                            </div>
                            <div class="col-md-3">
                                <div class="form-group">
                                    <label asp-for="Operations.ExpecDate" class="control-label"></label>
                                    <input asp-for="Operations.ExpecDate" class="form-control" id="followUpTypeFieldTwo" />
                                    <span asp-validation-for="Operations.ExpecDate" class="text-danger"></span>
                                </div>
                            </div>
                            <div class="col-md-3">
                                <div class="form-group">
                                    <label asp-for="Operations.FollowUpType" class="control-label"></label>
                                    <input asp-for="Operations.FollowUpType" class="form-control" id="followUpTypeField" />
                                    <span asp-validation-for="Operations.FollowUpType" class="text-danger"></span>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label asp-for="Operations.OpManagerSign" class="control-label"></label><span> *</span>
                                    <input asp-for="Operations.OpManagerSign" class="form-control" />
                                    <span asp-validation-for="Operations.OpManagerSign" class="text-danger"></span>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label asp-for="Operations.OperationsDate" class="control-label"></label><span> *</span>
                                    <input asp-for="Operations.OperationsDate" class="form-control" id="operationsDate" readonly />
                                    <span asp-validation-for="Operations.OperationsDate" class="text-danger"></span>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="row section-form">
                        <div class="section-label">
                            <h4>Report Notes</h4>
                            <hr />
                        </div>
                        <div class="col-md-12">
                            <div class="form-group">
                                <label asp-for="Operations.Message" class="control-label"></label>
                                <textarea asp-for="Operations.Message" rows="5" class="form-control"></textarea>
                                <span asp-validation-for="Operations.Message" class="text-danger"></span>
                            </div>
                        </div>
                    </div>

                    @if (Model.Operations != null && (User.IsInRole("Admin") || User.IsInRole("Operations Manager")))
                    {
                        <div class="row section-form">
                            <div class="section-label">
                                <h4>Multimedia</h4>
                                <hr />
                            </div>
                            <div class="col-md-12 uploader">
                                <label class="control-label">Images, screenshots, drawings</label>
                                <div class="form-group images-upload-container">
                                    <div class="upload-button-container">
                                        <label for="formFile" class="form-label">Drop files here or click on the button below</label>
                                        <button class="btn btn-primary">Upload</button>
                                        <input class="form-control" type="file" id="uploadFilebtn" name="Pictures" multiple onchange="handleFileSelection(this, 'Operations-container')">
                                    </div>
                                    <input id="uploadFileArea" class="form-control" type="file" name="Pictures" multiple onchange="handleFileSelection(this, 'Operations-container')" />
                                </div>
                                <div class="form-group" id="Operations-container"></div>
                            </div>

                            <div class="section-form multimedia">
                                @if (Model.Operations.QualityPhotos?.Any() ?? false)
                                {
                                    <div class="form-group details-images editor">
                                        @for (int i = 0; i < Model.Operations.QualityPhotos.Count; i++)
                                        {
                                            var image = Model.Operations.QualityPhotos[i];
                                            string imageBase64 = Convert.ToBase64String(image.Content);
                                            string imageSrc = string.Format("data:" + image.MimeType + ";base64,{0}", imageBase64);
                                            <div class="card editor" style="width: 14rem;">
                                                <!-- Button trigger modal -->
                                                <button type="button" class="btn btn-primary expand-img" data-bs-toggle="modal" data-bs-target="#imgOperModal-@i">
                                                    <i class="bi bi-arrows-angle-expand"></i>
                                                </button>
                                                <img src="@imageSrc" alt="Customer Image" title="Customer Image" class="card-img-top" />
                                                <div class="card-body">
                                                    <p>Remove Image</p>
                                                    <input class="form-check-input" type="checkbox" id="imagesToRemove" name="imagesToRemove" value="@image.ID">
                                                </div>
                                            </div>
                                            <!-- Modal -->
                                            <div class="modal fade" id="imgOperModal-@i" tabindex="-1" aria-labelledby="imgOperModalLabel" aria-hidden="true">
                                                <div class="modal-dialog modal-dialog-centered">
                                                    <div class="modal-content">
                                                        <div class="modal-header">
                                                            <h1 class="modal-title fs-5" id="imgOperModalLabel">Image</h1>
                                                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                                                        </div>
                                                        <div class="modal-body">
                                                            <img src="@imageSrc" alt="Customer Image" title="Customer Image" class="img-fluid rounded" />
                                                        </div>
                                                        <div class="modal-footer">
                                                            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        }
                                    </div>
                                }
                            </div>

                            <div class="col-md-12">
                                <div class="form-group link-adder">
                                    <label for="Links" class="form-label">Links</label>
                                    <div>
                                        <input class="form-control" name="Links" type="text" id="LinksOperations" />
                                        <button type="button" id="addLinkButton" class="btn btn-sm btn-primary" onclick="addLink('linksListContainerOperations', 'LinksOperations')"><i class="bi bi-plus-lg"></i></button>
                                    </div>
                                </div>

                                <div class="form-group" id="linksListContainerOperations"></div>
                            </div>

                            <div class="section-form multimedia">
                                @if (Model.Operations.VideoLinks != null && Model.Operations.VideoLinks.Any())
                                {
                                    <div class="form-group details-links editor">
                                        <ul>
                                            @foreach (var link in Model.Operations.VideoLinks)
                                            {
                                                <li>
                                                    <a href="@link.Link" target="_blank">@link.Link</a>
                                                    <div>
                                                        <p>Check to remove</p>
                                                        <input class="form-check-input" type="checkbox" id="linksToRemove" name="linksToRemove" value="@link.ID">
                                                    </div>
                                                </li>
                                            }
                                        </ul>
                                    </div>
                                }
                            </div>
                        </div>

                        <div class="form-group">
                            <input type="submit" value="Save Changes" class="btn btn-primary" />
                            <input type="text" value="Operations" id="sectionEdited" name="sectionEdited" hidden />
                        </div>
                    }
                </form>
            </div>
        </div>
    </div>
    <div class="accordion-item">
        <h2 class="accordion-header" id="panelsStayOpen-headingFour">
            <button class="accordion-button collapsed" id="Procurement-Section" type="button" data-bs-toggle="collapse" data-bs-target="#ProcurementForm" aria-expanded="false" aria-controls="ProcurementForm">
                <i class="bi bi-box-seam"></i>Procurement
            </button>
        </h2>
        <div id="ProcurementForm" class="accordion-collapse collapse" aria-labelledby="Procurement-Section">
            <div class="accordion-body">

                <form asp-action="Edit" method="post" enctype="multipart/form-data">
                    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                    @Html.AntiForgeryToken()

                    <input type="hidden" asp-for="RowVersion" />
                    <input type="hidden" asp-for="ID" />

                    <div class="section-form">
                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group form-check">
                                    <label class="form-check-label">
                                        <input class="form-check-input" asp-for="Procurement.SuppItemsBack" id="suppItemsBackCheckbox" /> @Html.DisplayNameFor(model => model.Procurement.SuppItemsBack)
                                    </label>
                                </div>
                                <div class="form-group form-check">
                                    <label class="form-check-label">
                                        <input class="form-check-input" asp-for="Procurement.SuppReturnCompleted" /> @Html.DisplayNameFor(model => model.Procurement.SuppReturnCompleted)
                                    </label>
                                </div>
                                <div class="form-group form-check">
                                    <label class="form-check-label">
                                        <input class="form-check-input" asp-for="Procurement.DisposeOnSite" /> @Html.DisplayNameFor(model => model.Procurement.DisposeOnSite)
                                    </label>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group form-check">
                                    <label class="form-check-label">
                                        <input class="form-check-input" asp-for="Procurement.IsCreditExpec" /> @Html.DisplayNameFor(model => model.Procurement.IsCreditExpec)
                                    </label>
                                </div>
                                <div class="form-group form-check">
                                    <label class="form-check-label">
                                        <input class="form-check-input" asp-for="Procurement.ChargeSupplier" /> @Html.DisplayNameFor(model => model.Procurement.ChargeSupplier)
                                    </label>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label asp-for="Procurement.RMANo" class="control-label"></label>
                                    <input asp-for="Procurement.RMANo" class="form-control" oninput="this.value = Math.abs(this.value)" id="RMANoField" />
                                    <span asp-validation-for="Procurement.RMANo" class="text-danger"></span>
                                </div>
                                <div class="form-group">
                                    <label asp-for="Procurement.NCRValue" class="control-label"></label>
                                    <input asp-for="Procurement.NCRValue" class="form-control" oninput="this.value = Math.abs(this.value)" />
                                    <span asp-validation-for="Procurement.NCRValue" class="text-danger"></span>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label class="control-label">When replaced items expected to be returned </label><span> *</span>
                                    <input asp-for="Procurement.ExpecDateOfReturn" class="form-control" />
                                    <span asp-validation-for="Procurement.ExpecDateOfReturn" class="text-danger"></span>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label asp-for="Procurement.ProcurementSign" class="control-label"></label><span> *</span>
                                    <input asp-for="Procurement.ProcurementSign" class="form-control" />
                                    <span asp-validation-for="Procurement.ProcurementSign" class="text-danger"></span>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label asp-for="Procurement.ProcurementDate" class="control-label"></label><span> *</span>
                                    <input asp-for="Procurement.ProcurementDate" class="form-control" id="procurementDate" readonly />
                                    <span asp-validation-for="Procurement.ProcurementDate" class="text-danger"></span>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="row section-form">
                        <div class="section-label">
                            <h4>Report Notes</h4>
                            <hr />
                        </div>
                        <div class="col-md-12">
                            <div class="form-group">
                                <label asp-for="Procurement.CarrierInfo" class="control-label"></label>
                                <textarea asp-for="Procurement.CarrierInfo" rows="5" class="form-control" id="carrierInfoField"> </textarea>
                                <span asp-validation-for="Procurement.CarrierInfo" class="text-danger"></span>
                            </div>
                        </div>
                    </div>

                    @if (Model.Procurement != null && (User.IsInRole("Admin") || User.IsInRole("Procurement")))
                    {
                        <div class="row section-form">
                            <div class="section-label">
                                <h4>Multimedia</h4>
                                <hr />
                            </div>
                            <div class="col-md-12 uploader">
                                <label class="control-label">Images, screenshots, drawings</label>
                                <div class="form-group images-upload-container">
                                    <div class="upload-button-container">
                                        <label for="formFile" class="form-label">Drop files here or click on the button below</label>
                                        <button class="btn btn-primary">Upload</button>
                                        <input class="form-control" type="file" id="uploadFilebtn" name="Pictures" multiple onchange="handleFileSelection(this, 'procurement-container')">
                                    </div>
                                    <input id="uploadFileArea" class="form-control" type="file" name="Pictures" multiple onchange="handleFileSelection(this, 'procurement-container')" />
                                </div>
                                <div class="form-group" id="procurement-container"></div>
                            </div>

                            <div class="section-form multimedia">
                                @if (Model.Procurement.QualityPhotos?.Any() ?? false)
                                {
                                    <div class="form-group details-images editor">
                                        @for (int i = 0; i < Model.Procurement.QualityPhotos.Count; i++)
                                        {
                                            var image = Model.Procurement.QualityPhotos[i];
                                            string imageBase64 = Convert.ToBase64String(image.Content);
                                            string imageSrc = string.Format("data:" + image.MimeType + ";base64,{0}", imageBase64);
                                            <div class="card editor" style="width: 14rem;">
                                                <!-- Button trigger modal -->
                                                <button type="button" class="btn btn-primary expand-img" data-bs-toggle="modal" data-bs-target="#imgProcModal-@i">
                                                    <i class="bi bi-arrows-angle-expand"></i>
                                                </button>
                                                <img src="@imageSrc" alt="Customer Image" title="Customer Image" class="card-img-top" />
                                                <div class="card-body">
                                                    <p>Remove Image</p>
                                                    <input class="form-check-input" type="checkbox" id="imagesToRemove" name="imagesToRemove" value="@image.ID">
                                                </div>
                                            </div>
                                            <!-- Modal -->
                                            <div class="modal fade" id="imgProcModal-@i" tabindex="-1" aria-labelledby="imgProcModalLabel" aria-hidden="true">
                                                <div class="modal-dialog modal-dialog-centered">
                                                    <div class="modal-content">
                                                        <div class="modal-header">
                                                            <h1 class="modal-title fs-5" id="imgProcModalLabel">Image</h1>
                                                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                                                        </div>
                                                        <div class="modal-body">
                                                            <img src="@imageSrc" alt="Customer Image" title="Customer Image" class="img-fluid rounded" />
                                                        </div>
                                                        <div class="modal-footer">
                                                            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        }
                                    </div>
                                }
                            </div>

                            <div class="col-md-12">
                                <div class="form-group link-adder">
                                    <label for="Links" class="form-label">Links</label>
                                    <div>
                                        <input class="form-control" name="Links" type="text" id="LinksProc" />
                                        <button type="button" id="addLinkButton" class="btn btn-sm btn-primary" onclick="addLink('linksListContainerProcurement', 'LinksProc')"><i class="bi bi-plus-lg"></i></button>
                                    </div>
                                </div>

                                <div class="form-group" id="linksListContainerProcurement"></div>
                            </div>

                            <div class="section-form multimedia">
                                @if (Model.Procurement.VideoLinks != null && Model.Procurement.VideoLinks.Any())
                                {
                                    <div class="form-group details-links editor">
                                        <ul>
                                            @foreach (var link in Model.Procurement.VideoLinks)
                                            {
                                                <li>
                                                    <a href="@link.Link" target="_blank">@link.Link</a>
                                                    <div>
                                                        <p>Check to remove</p>
                                                        <input class="form-check-input" type="checkbox" id="linksToRemove" name="linksToRemove" value="@link.ID">
                                                    </div>
                                                </li>
                                            }
                                        </ul>
                                    </div>
                                }
                            </div>
                        </div>

                        <div class="form-group">
                            <input type="submit" value="Save Changes" class="btn btn-primary" />
                            <input type="text" value="Procurement" id="sectionEdited" name="sectionEdited" hidden />
                        </div>
                    }

                </form>
            </div>
        </div>
    </div>
    <div class="accordion-item">
        <h2 class="accordion-header" id="panelsStayOpen-headingFive">
            <button class="accordion-button collapsed" id="Reinspection-Section" type="button" data-bs-toggle="collapse" data-bs-target="#ReinspectionForm" aria-expanded="false" aria-controls="ReinspectionForm">
                <i class="bi bi-arrow-repeat"></i>Reinspection
            </button>
        </h2>
        <div id="ReinspectionForm" class="accordion-collapse collapse" aria-labelledby="Reinspection-Section">
            <div class="accordion-body">
                <form asp-action="Edit" method="post" enctype="multipart/form-data">
                    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                    @Html.AntiForgeryToken()

                    <input type="hidden" asp-for="RowVersion" />
                    <input type="hidden" asp-for="ID" />

                    <div class="section-form">
                        <div class="row">
                            <div class="col-md-12">
                                <div class="form-group form-check">
                                    <label class="form-check-label">
                                        <input class="form-check-input" asp-for="Reinspection.ReinspecAccepted" /> @Html.DisplayNameFor(model => model.Reinspection.ReinspecAccepted)
                                    </label>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label asp-for="Reinspection.ReinspecInspectorSign" class="control-label"></label><span> *</span>
                                    <input asp-for="Reinspection.ReinspecInspectorSign" class="form-control" />
                                    <span asp-validation-for="Reinspection.ReinspecInspectorSign" class="text-danger"></span>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label asp-for="Reinspection.ReinspectionDate" class="control-label"></label><span> *</span>
                                    <input asp-for="Reinspection.ReinspectionDate" class="form-control" id="reinspectionDate" readonly />
                                    <span asp-validation-for="Reinspection.ReinspectionDate" class="text-danger"></span>
                                </div>
                            </div>
                        </div>
                    </div>

                    @if (Model.Reinspection != null && (User.IsInRole("Admin") || User.IsInRole("Quality Inspector")))
                    {
                        <div class="row section-form">
                            <div class="section-label">
                                <h4>Multimedia</h4>
                                <hr />
                            </div>
                            <div class="col-md-12 uploader">
                                <label class="control-label">Images, screenshots, drawings</label>
                                <div class="form-group images-upload-container">
                                    <div class="upload-button-container">
                                        <label for="formFile" class="form-label">Drop files here or click on the button below</label>
                                        <button class="btn btn-primary">Upload</button>
                                        <input class="form-control" type="file" id="uploadFilebtn" name="Pictures" multiple onchange="handleFileSelection(this, 'reinspection-container')">
                                    </div>
                                    <input id="uploadFileArea" class="form-control" type="file" name="Pictures" multiple onchange="handleFileSelection(this, 'reinspection-container')" />
                                </div>
                                <div class="form-group" id="reinspection-container"></div>
                            </div>

                            <div class="section-form multimedia">
                                @if (Model.Reinspection.QualityPhotos?.Any() ?? false)
                                {
                                    <div class="form-group details-images editor">
                                        @for (int i = 0; i < Model.Reinspection.QualityPhotos.Count; i++)
                                        {
                                            var image = Model.Reinspection.QualityPhotos[i];
                                            string imageBase64 = Convert.ToBase64String(image.Content);
                                            string imageSrc = string.Format("data:" + image.MimeType + ";base64,{0}", imageBase64);
                                            <div class="card editor" style="width: 14rem;">
                                                <!-- Button trigger modal -->
                                                <button type="button" class="btn btn-primary expand-img" data-bs-toggle="modal" data-bs-target="#imgReinspModal-@i">
                                                    <i class="bi bi-arrows-angle-expand"></i>
                                                </button>
                                                <img src="@imageSrc" alt="Customer Image" title="Customer Image" class="card-img-top" />
                                                <div class="card-body">
                                                    <p>Remove Image</p>
                                                    <input class="form-check-input" type="checkbox" id="imagesToRemove" name="imagesToRemove" value="@image.ID">
                                                </div>
                                            </div>
                                            <!-- Modal -->
                                            <div class="modal fade" id="imgReinspModal-@i" tabindex="-1" aria-labelledby="imgReinspModalLabel" aria-hidden="true">
                                                <div class="modal-dialog modal-dialog-centered">
                                                    <div class="modal-content">
                                                        <div class="modal-header">
                                                            <h1 class="modal-title fs-5" id="imgReinspModalLabel">Image</h1>
                                                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                                                        </div>
                                                        <div class="modal-body">
                                                            <img src="@imageSrc" alt="Customer Image" title="Customer Image" class="img-fluid rounded" />
                                                        </div>
                                                        <div class="modal-footer">
                                                            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        }
                                    </div>
                                }
                            </div>

                            <div class="col-md-12">
                                <div class="form-group link-adder">
                                    <label for="Links" class="form-label">Links</label>
                                    <div>
                                        <input class="form-control" name="Links" type="text" id="LinksReinspec" />
                                        <button type="button" id="addLinkButton" class="btn btn-sm btn-primary" onclick="addLink('linksListContainerReinspection', 'LinksReinspec')"><i class="bi bi-plus-lg"></i></button>
                                    </div>
                                </div>

                                <div class="form-group" id="linksListContainerReinspection"></div>
                            </div>

                            <div class="section-form multimedia">
                                @if (Model.Reinspection.VideoLinks != null && Model.Reinspection.VideoLinks.Any())
                                {
                                    <div class="form-group details-links editor">
                                        <ul>
                                            @foreach (var link in Model.Reinspection.VideoLinks)
                                            {
                                                <li>
                                                    <a href="@link.Link" target="_blank">@link.Link</a>
                                                    <div>
                                                        <p>Check to remove</p>
                                                        <input class="form-check-input" type="checkbox" id="linksToRemove" name="linksToRemove" value="@link.ID">
                                                    </div>
                                                </li>
                                            }
                                        </ul>
                                    </div>
                                }
                            </div>
                        </div>

                        <div class="form-group">
                            <input type="submit" value="Save Changes" class="btn btn-primary" />
                            <input type="text" value="Reinspection" id="sectionEdited" name="sectionEdited" hidden />
                        </div>
                    }
                </form>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://code.jquery.com/jquery-3.6.4.min.js"></script>
        <script src="~/js/photos-adder.js"></script>
    <script src="~/js/form-fill.js"></script>
    <script src="~/js/form-dates-filler.js"></script>
    <script src="~/js/block-fields.js"></script>
    @* <script src="~/js/video-link.js"></script> *@

    <script>


        var sectionEdited = "@sectionEdited"; // Properly format Razor variable
        var currentSection = '@Model.Phase';

        //vars to check if sections are not null
        var qual = @Html.Raw(Json.Serialize(isQualRepNull));
        var eng = @Html.Raw(Json.Serialize(isEngineeringNull));
        var oper = @Html.Raw(Json.Serialize(isOperationsNull));
        var proc = @Html.Raw(Json.Serialize(isProcurementNull));
       
        const userRoles = @Html.Raw(Json.Serialize(userRole));

        // Helper method to unfold sections
        function toggleAccordion(sectionId, sectionButtonId, section) {

            $(sectionId).addClass('show');
            $(sectionButtonId).removeClass('collapsed');
        }

        // Unfold section according to NCR Phase
        $(document).ready(function () {
            //Test with MultipleRoles

            if (userRoles.includes("Quality Inspector") && !qual) {
                toggleAccordion('#QualityForm', '#Quality-Section', 'QualityForm');
            } if (userRoles.includes("Engineer") && !eng) {
                toggleAccordion('#EngineerForm', '#Engineering-Section', 'EngineerForm');
            } if (userRoles.includes("Operations Manager") && !oper) {
                toggleAccordion('#OperationsForm', '#Operations-Section', 'OperationsForm');
            } if (userRoles.includes("Procurement") && !proc) {
                toggleAccordion('#ProcurementForm', '#Procurement-Section', 'ProcurementForm');
            }
            else if (userRoles.includes("Admin")) {
                if (!qual) {
                    toggleAccordion('#QualityForm', '#Quality-Section', 'QualityForm');
                }
                if (!eng) {
                    toggleAccordion('#EngineerForm', '#Engineering-Section', 'EngineerForm');
                }
                if (!oper) {
                    toggleAccordion('#OperationsForm', '#Operations-Section', 'OperationsForm');
                }
                if (!proc) {
                    toggleAccordion('#ProcurementForm', '#Procurement-Section', 'ProcurementForm');
                }
            }

            const formControls = document.querySelectorAll('.accordion-collapse.collapse .form-control, .accordion-collapse.collapse .form-check-input, .accordion-collapse.collapse .form-select');

            //Block all the fields that cannot be edited
            for (let item of formControls) {
                let parentDiv = item.closest('.accordion-collapse.show');
                if(parentDiv == null){
                    item.disabled = true;
                }
            }

        });

        // Define ScrollIntoSection function globally
        function ScrollIntoSection(targetElementID) {
            var targetElement = document.getElementById(targetElementID);
            targetElement.scrollIntoView({ behavior: 'smooth', block: 'start' });
        }

        // Scroll to section edited
        $(document).ready(function () {

            if (sectionEdited != null) {
                if (sectionEdited == "QualityRepresentative") {
                    ScrollIntoSection('panelsStayOpen-headingOne');
                }
                else if (sectionEdited == "Engineering") {
                    ScrollIntoSection('panelsStayOpen-headingTwo');
                }
                else if (sectionEdited == "Operations") {
                    ScrollIntoSection('panelsStayOpen-headingThree');
                }
                else if (sectionEdited == "Procurement") {
                    ScrollIntoSection('panelsStayOpen-headingFour');
                }
                else if (sectionEdited == "Reinspection") {
                    ScrollIntoSection('panelsStayOpen-headingFive');
                }
            }
        });

        //Links adder
        function addLink(containerId, linksInputID) {
            var linksListContainer = document.getElementById(containerId);
            var linkInput = document.getElementById(linksInputID);
            var linkValue = linkInput.value.trim();

            if (linkValue !== "") {

                // Create a list item to display the link
                var listItem = document.createElement("div");
                var listItemText = document.createElement("p");
                listItemText.textContent = linkValue;
                listItemText.classList.add("standard-border-bottom");

                // Create a hidden input for the link
                var hiddenInput = document.createElement("input");
                hiddenInput.type = "hidden";
                hiddenInput.name = "links";
                hiddenInput.value = linkValue;

                // Add a button to remove the link and its hidden input
                var removeButton = document.createElement("button");
                removeButton.textContent = "Remove";

                removeButton.onclick = function () {
                    linksListContainer.removeChild(listItem);
                    linksListContainer.removeChild(hiddenInput);

                    if (linksListContainer.children.length === 0) {
                        linksListContainer.style.display = "none";
                    }
                };

                // Append the remove button to the list item
                listItem.appendChild(removeButton);
                listItem.appendChild(listItemText);

                // Append the list item and hidden input to the container
                linksListContainer.appendChild(listItem);
                linksListContainer.appendChild(hiddenInput);


                // Clear the input field
                linkInput.value = "";

                if (linksListContainer.children.length > 0) {
                    linksListContainer.style.display = "flex";
                }
            }

        }

    </script>

}
