@model IEnumerable<NCR>

@{
    ViewData["Title"] = "NCR";
}

@{
    var errorAlert = TempData["ErrorAlert"] as string;
    var successAlert = TempData["SuccessAlert"] as string;
    var warningAlert = TempData["WarningAlert"] as string;
    var infoAlert = TempData["InfoAlert"] as string;

    var activeCheck = ViewData["activeCheck"] as string;

    var supplierSelected = ViewData["SupplierSelected"] as string;
    var ncrNumSelected = ViewData["NcrNumSelected"] as string;
}

@if (!string.IsNullOrEmpty(infoAlert)) // Check if the alert message is not empty
{
    <div class="alert alert-primary d-flex align-items-center standard-border-bottom alert-container conditional" role="alert">
        <i class="bi bi-info-circle-fill" style="color: var(--blue);"></i>
        <div>
            @infoAlert
        </div>
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}
@if (!string.IsNullOrEmpty(errorAlert)) // Check if the alert message is not empty
{
    <div class="alert alert-danger d-flex align-items-center standard-border-bottom alert-container conditional" role="alert">
        <i class="bi bi-exclamation-triangle-fill" style="color: var(--red);"></i>
        <div>
            @errorAlert 
        </div>
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}
else if (!string.IsNullOrEmpty(warningAlert))
{
    <div class="alert alert-warning d-flex align-items-center standard-border-bottom alert-container conditional" role="alert">
        <i class="bi bi-exclamation-triangle-fill" style="color: var(--yellow);"></i>
        <div>
            @warningAlert
        </div>
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}
else if (!string.IsNullOrEmpty(successAlert))
{
    <div class="alert alert-success d-flex align-items-center standard-border-bottom alert-container conditional" role="alert">
        <i class="bi bi-check-circle-fill" style="color: var(--green);"></i>
        <div>
            @successAlert 
        </div>
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}

@* Alerts loaded by ajax calll *@
<div class="alert alert-success align-items-center standard-border-bottom alert-container" style="display: none;" role="alert">
    <i class="bi bi-check-circle-fill" style="color: var(--green);"></i>
    <div>
    </div>
    <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
</div>

<div class="alert alert-danger align-items-center standard-border-bottom alert-container" style="display:none;" role="alert">
    <i class="bi bi-exclamation-triangle-fill" style="color: var(--red);"></i>
    <div>
    </div>
    <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
</div>


<div>
    <h1>NCR</h1>

    <nav class="main-nav ncr navbar-expand-sm navbar-toggleable-sm">
        <ul class="navbar-nav">
            <li class="nav-item">
                <a class="nav-link" asp-area="" asp-controller="NCR" asp-action="Index" onclick="activateLink(this)">NCR log</a>
                <hr />
            </li>
            @if (User.IsInRole("Admin"))
            {
                <li class="nav-item">
                    <a class="nav-link" asp-area="" asp-controller="NCR" asp-action="Analytics" onclick="activateLink(this)">Analytics</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" asp-area="" asp-controller="NCR" asp-action="Archived" onclick="activateLink(this)">Archived NCRs</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" asp-area="" asp-controller="NCR" asp-action="Archiving" onclick="activateLink(this)">Bulk Archiving</a>
                </li>
            }
        </ul>
        <hr />

    </nav>
    <div class="dropdown ncr-mobile-nav">
        @if (User.IsInRole("Admin"))
        {
            <button class="dropdown-toggle" type="button" id="dropdownMenu2" data-bs-toggle="dropdown" aria-expanded="false">
                <i class="bi bi-list"></i>
            </button>
            <ul class="dropdown-menu" aria-labelledby="dropdownMenu2">
                <li><a class="nav-link" asp-area="" asp-controller="NCR" asp-action="Index" onclick="activateLink(this)">NCR log</a></li>
                <li><a class="nav-link" asp-area="" asp-controller="NCR" asp-action="Analytics" onclick="activateLink(this)">Analytics</a></li>
                <li><a class="nav-link" asp-area="" asp-controller="NCR" asp-action="Archived" onclick="activateLink(this)">Archived NCRs</a></li>
                <li><a class="nav-link" asp-area="" asp-controller="NCR" asp-action="Archiving" onclick="activateLink(this)">Bulk Archiving</a></li>
            </ul>
        }
        <h2>NCR Log</h2>
        <hr />
    </div>

</div>


@if (User.IsInRole("Admin") || User.IsInRole("Quality Inspector"))
{
<div>
    <a class="btn btn-secondary" asp-action="CreateQualityRepresentative"><i class="bi bi-person-add"></i>Create New</a>
</div>
}
else
{
<div>
    <a class="btn btn-secondary disabled" asp-action="CreateQualityRepresentative" aria-disabled="true"><i class="bi bi-person-add"></i>Create New</a>
</div>
}

<form asp-action="Index" method="get">
    <input type="hidden" name="sortDirection" value="@ViewData["sortDirection"]" />
    <input type="hidden" name="sortField" value="@ViewData["sortField"]" />

    <div class="filtering-fields form-horizontal">
        <div class="row">
            <div class="form-group col-md-3">
                <label class="control-label">Search NCR number</label>
                <div class="input-search-box">
                    <input name="SearchString" class="form-control" list="datalistOptions" id="exampleDataList" placeholder="Search NCR number" autocomplete="off" type="text" value="@ncrNumSelected">
                </div>
                <datalist id="datalistOptions">
                    @foreach (var ncr in ViewBag.NCRsToDL)
                    {
                        <option value="@ncr.NCRNum"></option>
                    }
                </datalist>
            </div>
            <div class="form-group col-md-3">
                <label class="control-label">Filter by Supplier</label>
                <div class="input-search-box">
                    <input name="SupplierID" class="form-control" list="supOptions" id="exampleDataListTwo" placeholder="Search supplier" autocomplete="off" type="text" value="@supplierSelected">
                </div>
                <datalist id="supOptions">
                    @foreach (var item in ViewBag.SupplierSummary)
                    {
                        <option value="@item.Value">@item.Text</option>
                    }
                </datalist>

            </div>
            <div class="form-group col-md-3">
                <label class="control-label">Filter by Phase</label>
                @Html.DropDownList("SelectedOption", new List<SelectListItem>
                {
                new SelectListItem { Text = "Quality Representative", Value = "Quality Representative" },
                new SelectListItem { Text = "Engineering", Value = "Engineering" },
                new SelectListItem { Text = "Operations", Value = "Operations" },
                new SelectListItem { Text = "Procurement", Value = "Procurement" },
                new SelectListItem { Text = "Reinspection", Value = "Reinspection" }
                }, "All Phases", htmlAttributes: new { @class = "form-select" })
            </div>
            <div class="form-group form-switch col-md-3 fieltering-checkbox">
                <label class="form-check-label" for="flexSwitchCheckDefault">Show inactive/closed NCRs?</label>
                <input class="form-check-input" type="checkbox" name="active" id="flexSwitchCheckDefault" @(activeCheck != null ? "checked" : "")>
            </div>
@*          <div class="form-group col-md-3">
                <label class="control-label">Filter by time since last filled</label>
                @Html.DropDownList("ncrsByActiveTime", new List<SelectListItem>
                {
                new SelectListItem { Text = "+3d", Value = "+3d" },
                new SelectListItem { Text = "48h", Value = "48h" },
                new SelectListItem { Text = "24h", Value = "24h" },
                }, "All Periods", htmlAttributes: new { @class = "form-select" })
            </div> *@
            <div class="form-group col-md-4 align-self-end fieltering-btns">
                <button type="submit" name="actionButton" class="btn btn-primary">
                    <i class="bi bi-funnel-fill"></i>
                    Filter
                </button>
                <a asp-action="Index" class="btn btn-primary"><i class="bi bi-arrow-clockwise"></i>Clear</a>
            </div>
        </div>
    </div>

    <div class="d-none d-lg-block">
    
        <table class="table table-borderless">
            <thead>
                <tr>
                    <th class="sorting-headers">
                        <input id="thElement" type="submit" name="actionButton" value="NCR NO." class="btn btn-link" />
                        <i class="bi bi-arrow-down-up"></i>
                    </th>
                    <th>
                        STATUS
                    </th>
                    <th>
                        PHASE
                    </th>
                    <th class="pono-row-header">
                        PO OR PROD NO.
                    </th>
                    <th>
                        SUPPLIER
                    </th>
                    <th class="sorting-headers">
                        <input type="submit" name="actionButton" value="CREATED ON" class="btn btn-link" />
                        <i class="bi bi-arrow-down-up"></i>
                    </th>

                    <th></th>
                </tr>
            </thead>

            <tbody class="ncr-list-row">
                @foreach (var item in Model)
                {
                    string rowVersionBase64 = Convert.ToBase64String(item.RowVersion);

                    <tr id="tr-@item.ID">
                        <td class="ncr-num-td">
                            @if(item.NCRNum == null){
                                <div>0000-000</div>
                            }
                            else
                            {
                                <div>@Html.DisplayFor(modelItem => item.NCRNum)</div>
                            }
                        </td>
                        <td>
                            @if (item.Status == "Active" && item.IsNCRDraft != true)
                            {
                                <span style="color: var(--green);">@Html.DisplayFor(modelItem => item.Status)</span>
                            }
                            else if (item.IsNCRDraft)
                            {
                                <span style="color: var(--haver-blue);">Draft</span>
                            }
                            else if (item.Status == "Closed")
                            {
                                <span style="color: var(--yellow);">@Html.DisplayFor(modelItem => item.Status)</span>
                            }
                            else if (item.Status == "Rejected" || item.Status == "Rejected Again")
                            {
                                <span style="color: var(--red);">@Html.DisplayFor(modelItem => item.Status)</span>
                            }
                            else if (item.Status == "Voided")
                            {
                                <span style="color: var(--haver-blue);">@Html.DisplayFor(modelItem => item.Status)</span>
                            }
                        </td>
                        <td class="ncr-row-phase">
                            @Html.DisplayFor(modelItem => item.Phase)
                        </td>
                        <td class="pono-row">
                            @Html.DisplayFor(modelItem => item.QualityRepresentative.PoNo)
                        </td>
                        <td class="supplier-name-row">
                            @Html.DisplayFor(modelItem => item.QualityRepresentative.Supplier.SupplierName)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.CreatedOnDO)
                        </td>
                        <td class="details-menu-row">
                            <a class="btn btn-primary" asp-action="Details" asp-route-id="@item.ID"><i class="bi bi-card-list"></i>Details</a>

                            @* <a class="btn btn-primary" href="@Url.Action("DownloadPDF", "NCR", new { id = @item.ID })"><i class="bi bi-download"></i>Download PDF</a> *@
                            <div class="dropdown ncr-rows-menu">
                                <button class="dropdown-toggle" type="button" id="dropdownMenu2" data-bs-toggle="dropdown" aria-expanded="false">
                                    <i class="bi bi-list"></i>
                                </button>
                                <ul class="dropdown-menu" aria-labelledby="dropdownMenu2">
                                    @if (item.Phase == "Quality Representative" && item.Status != "Voided" && (User.IsInRole("Admin") || User.IsInRole("Quality Inspector")))
                                    {
                                        <li><a class="dropdown-item" asp-action="CreateQualityRepresentative" asp-route-id="@item.ID" asp-route-rowVersion="@rowVersionBase64">Fill section</a></li>
                                    }
                                    else if (item.Phase == "Engineering" && item.Status != "Voided" && (User.IsInRole("Admin") || User.IsInRole("Engineer")))
                                    {
                                        <li><a class="dropdown-item" asp-action="CreateEngineering" asp-route-id="@item.ID" asp-route-rowVersion="@rowVersionBase64">Fill in section</a></li>
                                    }
                                    else if (item.Phase == "Operations" && item.Status != "Voided" && (User.IsInRole("Admin") || User.IsInRole("Operations Manager")))
                                    {
                                        <li><a class="dropdown-item" asp-action="CreateOperations" asp-route-id="@item.ID" asp-route-rowVersion="@rowVersionBase64">Fill in section</a></li>
                                    }
                                    else if (item.Phase == "Procurement" && item.Status != "Voided" && (User.IsInRole("Admin") || User.IsInRole("Procurement")))
                                    {
                                        <li><a class="dropdown-item" asp-action="CreateProcurement" asp-route-id="@item.ID" asp-route-rowVersion="@rowVersionBase64">Fill in section</a></li>
                                    }
                                    else if (item.Phase == "Reinspection" && item.Status != "Voided" && (User.IsInRole("Admin") || User.IsInRole("Quality Inspector")))
                                    {
                                        <li><a class="dropdown-item" asp-action="CreateReinspection" asp-route-id="@item.ID" asp-route-rowVersion="@rowVersionBase64">Fill in section</a></li>
                                    }

                                    <li><a class="dropdown-item" href="@Url.Action("DownloadPDF", "NCR", new { id = @item.ID })">Download PDF</a></li>
                                        
                                    @if (item.PrevNCRID != null)
                                    {
                                        <li><a class="dropdown-item" asp-action="Details" asp-route-id="@item.PrevNCRID">Go to prev NCR</a></li>
                                    }
                                    @if (item.NewNCRID != null)
                                    {
                                        <li><a class="dropdown-item" asp-action="Details" asp-route-id="@item.NewNCRID">Go to new NCR</a></li>
                                    }
                                    @if (item.Status == "Voided" && User.IsInRole("Admin"))
                                    {
                                        <li><a class="dropdown-item" asp-action="VoidNCR" asp-route-id="@item.ID" asp-route-rowVersion="@rowVersionBase64" asp-route-cancel="cancel">Cancel Void</a></li>
                                    }
                                    @if (item.IsNCRDraft == true)
                                    {
                                        <li><a class="dropdown-item" asp-action="CancelDraft" asp-route-id="@item.ID" asp-route-rowVersion="@rowVersionBase64">Cancel draft</a></li>
                                    }
                                    @if (item.Status == "Active" && User.IsInRole("Admin"))
                                    {
                                        <li><a class="dropdown-item" data-bs-toggle="modal" data-bs-target="#ConfirmationModal" onclick="retrieveID(@item.ID, 'void', '@rowVersionBase64')">Void NCR</a></li>
                                    }
                                    @if (User.IsInRole("Admin"))
                                    {
                                        <li><a class="dropdown-item" data-bs-toggle="modal" data-bs-target="#ConfirmationModal" onclick="retrieveID(@item.ID, 'archive', '@rowVersionBase64')">Archive NCR</a></li>
                                    }
                                    @* Edit *@
                                    @if (item.IsNCRDraft == false && item.Status == "Active")
                                    {
                                        @if ((User.IsInRole("Quality Inspector") || User.IsInRole("Admin")) && item.QualityRepresentative != null)
                                        {
                                            <li><a class="dropdown-item" asp-action="Edit" asp-route-id="@item.ID" asp-route-rowVersion="@rowVersionBase64">Edit NCR</a></li>
                                        }
                                        else if (User.IsInRole("Engineer") && item.Engineering != null)
                                        {
                                            <li><a class="dropdown-item" asp-action="Edit" asp-route-id="@item.ID" asp-route-rowVersion="@rowVersionBase64">Edit NCR</a></li>
                                        }
                                        else if (User.IsInRole("Operations Manager") && item.Operations != null)
                                        {
                                            <li><a class="dropdown-item" asp-action="Edit" asp-route-id="@item.ID" asp-route-rowVersion="@rowVersionBase64">Edit NCR</a></li>
                                        }
                                        else if (User.IsInRole("Procurement") && item.Procurement != null)
                                        {
                                            <li><a class="dropdown-item" asp-action="Edit" asp-route-id="@item.ID" asp-route-rowVersion="@rowVersionBase64">Edit NCR</a></li>
                                        }
                                        else if (User.IsInRole("Quality Inspector") && item.Reinspection != null)
                                        {
                                            <li><a class="dropdown-item" asp-action="Edit" asp-route-id="@item.ID" asp-route-rowVersion="@rowVersionBase64">Edit NCR</a></li>
                                        }
                                    }
                                </ul>
                            </div>
                        </td>
                        @if (item.PrevNCRID != null)
                        {
                            <script>
                                document.querySelectorAll('#tr-' + @item.ID + ' td').forEach((td, index) => {
                                    // Setting common styles for border bottom and top
                                    td.style.borderBottom = '1.5px rgb(175, 57, 57, 54%) solid';
                                    td.style.borderTop = '1.5px rgb(175, 57, 57, 54%) solid';

                                    if (index === 6) {
                                            td.style.borderRight = '1.5px rgb(175, 57, 57, 54%) solid';
                                    }
                                    if (index === 0) {
                                        td.style.borderLeft = '1.5px rgb(175, 57, 57, 54%) solid';
                                    }

                                });

                            </script>
                        }
                    </tr>
                }
            </tbody>
        </table>
    </div>

    <br />
    <div class="ncr-cards container-fluid d-block d-lg-none">

        <div class="row">
            @foreach (var item in Model)
            {
                string rowVersionBase64 = Convert.ToBase64String(item.RowVersion);

                <div class="card mb-3">
                    <div class="card-header">
                        @if (item.NCRNum == null)
                        {
                            <p>0000-000</p>
                        }
                        else
                        {
                            <p>@Html.DisplayFor(modelItem => item.NCRNum)</p>
                        }
                        @if (item.Status == "Active")
                        {
                            <span style="color: var(--green);">@Html.DisplayFor(modelItem => item.Status)</span>
                        }
                        else if (item.Status == "Closed")
                        {
                            <span style="color: var(--yellow);">@Html.DisplayFor(modelItem => item.Status)</span>
                        }
                        else if (item.Status == "Rejected" || item.Status == "Rejected Again")
                        {
                            <span style="color: var(--red);">@Html.DisplayFor(modelItem => item.Status)</span>
                        }
                        else if (item.Status == "Voided")
                        {
                            <span style="color: var(--haver-blue);">@Html.DisplayFor(modelItem => item.Status)</span>
                        }
                    </div>
                    <div class="card-body">
                        <div class="row">
                            <div class="col">
                                <p><strong>Phase:</strong> @Html.DisplayFor(modelItem => item.Phase)</p>
                                <p><strong>PO Number:</strong> @Html.DisplayFor(modelItem => item.QualityRepresentative.PoNo)</p>
                                <p><strong>Supplier:</strong> @Html.DisplayFor(modelItem => item.QualityRepresentative.Supplier.SupplierName)</p>
                                <p><strong>Created On:</strong> @Html.DisplayFor(modelItem => item.CreatedOn)</p>
                            </div>
                            <div class="col">
                                <a class="btn btn-primary" asp-action="Details" asp-route-id="@item.ID">Details</a>
                                @if (item.Phase == "Quality Representative" && item.Status != "Voided" && (User.IsInRole("Admin") || User.IsInRole("Quality Inspector")))
                                {
                                    <a class="btn btn-primary" asp-action="CreateQualityRepresentative" asp-route-id="@item.ID" asp-route-rowVersion="@rowVersionBase64">Fill section</a>
                                }
                                else if (item.Phase == "Engineering" && item.Status != "Voided" && (User.IsInRole("Admin") || User.IsInRole("Engineer")))
                                {
                                    <a class="btn btn-primary" asp-action="CreateEngineering" asp-route-id="@item.ID" asp-route-rowVersion="@rowVersionBase64">Fill in section</a>
                                }
                                else if (item.Phase == "Operations" && item.Status != "Voided" && (User.IsInRole("Admin") || User.IsInRole("Operations Manager")))
                                {
                                    <a class="btn btn-primary" asp-action="CreateOperations" asp-route-id="@item.ID" asp-route-rowVersion="@rowVersionBase64">Fill in section</a>
                                }
                                else if (item.Phase == "Procurement" && item.Status != "Voided" && (User.IsInRole("Admin") || User.IsInRole("Procurement")))
                                {
                                    <a class="btn btn-primary" asp-action="CreateProcurement" asp-route-id="@item.ID" asp-route-rowVersion="@rowVersionBase64">Fill in section</a>
                                }
                                else if (item.Phase == "Reinspection" && item.Status != "Voided" && (User.IsInRole("Admin") || User.IsInRole("Quality Inspector")))
                                {
                                    <a class="btn btn-primary" asp-action="CreateReinspection" asp-route-id="@item.ID" asp-route-rowVersion="@rowVersionBase64">Fill in section</a>
                                }
                                <a class="btn btn-primary" href="@Url.Action("DownloadPDF", "NCR", new { id = @item.ID })">Download PDF</a>
                                @if (item.PrevNCRID != null)
                                {
                                    <a class="btn btn-primary" asp-action="Details" asp-route-id="@item.PrevNCRID">Go to prev NCR</a>
                                }
                                @if (item.NewNCRID != null)
                                {
                                    <a class="btn btn-primary" asp-action="Details" asp-route-id="@item.NewNCRID">Go to new NCR</a>
                                }
                                @if (item.IsNCRDraft == true)
                                {
                                    <a class="btn btn-primary" asp-action="CancelDraft" asp-route-id="@item.ID" asp-route-rowVersion="@rowVersionBase64">Cancel Draft</a>
                                }
                                @if (item.Status == "Voided" && User.IsInRole("Admin"))
                                {
                                    <a class="btn btn-primary" asp-action="VoidNCR" asp-route-id="@item.ID" asp-route-rowVersion="@rowVersionBase64" asp-route-cancel="cancel">Cancel Void</a>
                                }
                                @if (item.Status == "Active" && User.IsInRole("Admin"))
                                {
                                    <a class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#ConfirmationModal" onclick="retrieveID(@item.ID, 'void', '@rowVersionBase64')">Void NCR</a>
                                }
                                @if (User.IsInRole("Admin"))
                                {
                                    <a class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#ConfirmationModal" onclick="retrieveID(@item.ID, 'archive', '@rowVersionBase64')">Archive NCR</a>
                                }
                                @* Edit *@
                                @if(item.IsNCRDraft == false && item.Status == "Active")
                                {
                                    @if ((User.IsInRole("Quality Inspector") || User.IsInRole("Admin")) && item.QualityRepresentative != null)
                                    {
                                        <a class="btn btn-primary" asp-action="Edit" asp-route-id="@item.ID" asp-route-rowVersion="@rowVersionBase64">Edit NCR</a>
                                    }
                                    else if (User.IsInRole("Engineer") && item.Engineering != null)
                                    {
                                        <a class="btn btn-primary" asp-action="Edit" asp-route-id="@item.ID" asp-route-rowVersion="@rowVersionBase64">Edit NCR</a>
                                    }
                                    else if (User.IsInRole("Operations Manager") && item.Operations != null)
                                    {
                                        <a class="btn btn-primary" asp-action="Edit" asp-route-id="@item.ID" asp-route-rowVersion="@rowVersionBase64">Edit NCR</a>
                                    }
                                    else if (User.IsInRole("Procurement") && item.Procurement != null)
                                    {
                                        <a class="btn btn-primary" asp-action="Edit" asp-route-id="@item.ID" asp-route-rowVersion="@rowVersionBase64">Edit NCR</a>
                                    }
                                    else if (User.IsInRole("Quality Inspector") && item.Reinspection != null)
                                    {
                                        <a class="btn btn-primary" asp-action="Edit" asp-route-id="@item.ID" asp-route-rowVersion="@rowVersionBase64">Edit NCR</a>
                                    }
                                }
                                

                            </div>
                        </div>
                    </div>
                </div>

            }

        </div>

    </div>

    @*Archiving Modal*@
    <div class="modal fade" id="ConfirmationModal" tabindex="-1" aria-labelledby="ConfirmationModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="ConfirmationModalLabel">Confirmation</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body" id="modal-body-container">
                </div>
                @*PDF downloader*@
                <div class="modal-body" id="body-container-download">
                    <div class="row">
                        <div class="col text-center">
                            <button type="button" class="btn btn-primary" onclick="downloadFullPDF()">
                                <i class="bi bi-file-earmark-pdf"></i>
                                Download Full PDF
                            </button>
                        </div>
                        <div class="col text-center">
                            <button type="button" class="btn btn-primary" onclick="downloadSimplePDF()">
                                <i class="bi bi-file-earmark-text"></i>
                                Download Simple PDF
                            </button>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-primary" data-bs-dismiss="modal">No</button>
                    <button type="button" class="btn btn-primary" data-bs-dismiss="modal" id="confirmBtn" >Yes</button>
                </div>
            </div>
        </div>
    </div>




    <partial name="_PagingNavBar" />
</form>

@section Scripts {
    <script>
        
        //Tooltip
        var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'))
        var tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {
            return new bootstrap.Tooltip(tooltipTriggerEl)
        })

        // Archiving modal
        var ncrIdChoosen;
        var actionChoosen;
        var itemRowVersion;

        //Confirm action

        document.getElementById('confirmBtn').addEventListener('click', function () {
            startAction();
        });

        function startAction(){
            if (actionChoosen == 'archive') {
                archiveNCR(ncrIdChoosen);
            }
            else if (actionChoosen == 'download simple' || actionChoosen == 'download full') {
            }
            else if (actionChoosen == 'void') {
                voidNCR(ncrIdChoosen);
            }
        }

        //Decide which message the modal should have
        function retrieveID(id, action, RowVersion) {
            ncrIdChoosen = id;
            actionChoosen = action;
            itemRowVersion = RowVersion;
            console.log(itemRowVersion);

            $('#modal-body-container').css('display', 'block');
            $('#body-container-download').css('display', 'none');

            if(action == "archive"){
                $('#modal-body-container').empty();
                $('#modal-body-container').text('Are you sure you want to archive this NCR? This action cannot be undone');
            }
            else if(action == "download simple" || action == 'download full'){
                $('#modal-body-container').css('display', 'none');
                $('#body-container-download').css('display', 'block');
            }
            else{
                $('#modal-body-container').empty();
                var container =
                    '<p>' + 'Are you sure you want to void this NCR ?' + '</p>' +
                    '<label for="voidReasonInput">' + 'Reason for Void:' + '</label>' +
                    '<textarea class="form-control" id="voidReasonInput" rows = "3" placeholder = "Enter reason for voiding">' + '</textarea>';
                $('#modal-body-container').append(container);
            }
        }

        function archiveNCR(ncrId) {
            var rowToRemove = document.getElementById("tr-" + ncrId);

            $.ajax({
                type: "POST",
                url: "/NCR/ArchiveNCR",
                data:
                {
                    id: ncrId,
                    rowVersion: itemRowVersion
                },
                contextType: "application/json; charset=utf8",
                dataType: "json",
                success: function (response) {
                    $(".alert.conditional .btn-close").click();
                    $(".alert-danger").removeClass("d-flex");
                    $(".alert-success").removeClass("d-flex");

                    console.log('NCR Voided');
                    if (response.successAlert) {
                        // Display success message
                        $(".alert-success").addClass("d-flex");
                        $(".alert-success div").show().text(response.successAlert);
                        $(rowToRemove).css('display', 'none'); // Remove the row from the table
                    }
                    else if (response.errorAlert) {
                        // Display error message
                        $(".alert-danger").addClass("d-flex");
                        $(".alert-danger div").show().text(response.errorAlert + " Please refresh your page.");
                    }
                },
                error: function (xhr, status, error) {
                    $(".alert-success").removeClass("d-flex");
                    // Handle errors if the AJAX request fails
                    console.error(error); // Log the error to the console
                    $(".alert-danger").addClass("d-flex");
                    $(".alert-danger div").show().text("Could not complete task, NCR was modified by another user. Please refresh your page.");
                }
            });
        }

        //Voiding modal
        function voidNCR(ncrId) {
            console.log(ncrIdChoosen);
            var voidReasonInput = document.getElementById("voidReasonInput").value;
            var rowToRemove = document.getElementById("tr-" + ncrId);

            $.ajax({
                type: "POST",
                url: "/NCR/VoidNCR",
                data:
                {
                    id: ncrId,
                    voidingReason: voidReasonInput,
                    rowVersion: itemRowVersion
                },
                contextType: "application/json; charset=utf8",
                dataType: "json",
                success: function (response) {
                    $(".alert.conditional .btn-close").click();
                    $(".alert-danger").removeClass("d-flex");
                    $(".alert-success").removeClass("d-flex");
                    
                    if (response.successAlert) {
                        // Display success message
                        $(".alert-success").addClass("d-flex");
                        $(".alert-success div").show().text(response.successAlert);
                        $(rowToRemove).css('display', 'none'); // Remove the row from the table
                    }
                    else if (response.errorAlert) {
                        // Display error message
                        $(".alert-danger").addClass("d-flex");
                        $(".alert-danger div").show().text(response.errorAlert + " Please refresh your page.");
                    }
                    //$('html, body').animate({ scrollTop: 0 }, 'slow');
                },
                error: function (xhr, status, error) {
                    $(".alert-success").removeClass("d-flex");
                    // Handle errors if the AJAX request fails
                    console.error(error); // Log the error to the console
                    // Display error message
                    $(".alert-danger").addClass("d-flex");
                    $(".alert-danger div").show().text("Could not complete task, NCR was modified by another user. Please refresh your page.");
                }
            });
        }

        //download pdf

    </script>
}

